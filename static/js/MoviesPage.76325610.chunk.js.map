{"version":3,"sources":["services/api-service.js","components/Button/Button.jsx","components/Button/Button.module.css","components/MoviesForm/MoviesForm.jsx","components/MoviesSearchList/MoviesSearchList.jsx","pages/MoviesPage/MoviesPage.jsx"],"names":["axios","require","URL","BASE","IMG","PATH","HOME","SEARCH","KEY","trendingApiService","request","a","data","results","searchApiService","params","language","query","include_adult","movieApiService","id","defaults","baseURL","api_key","Button","type","forClick","children","className","s","btn","onClick","defaultProps","module","exports","MoviesForm","forSearch","search","useState","input","setInput","onSubmit","e","preventDefault","placeholder","onChange","target","value","style","marginRight","marginBottom","MoviesSearchList","location","useLocation","movies","setMovies","useEffect","then","map","movie","to","state","from","label","title","MoviesPage","useSearchParams","searchParams","setSearchParams","get"],"mappings":"8SAAMA,EAAQC,EAAQ,IAETC,EAAM,CACjBC,KAAM,+BACNC,IAAK,kCACLC,KAAM,QACNC,KAAM,WACNC,OAAQ,SACRC,IAAK,oCASA,SAAeC,EAAtB,kC,4CAAO,WAAkCC,GAAlC,iBAAAC,EAAA,sEACkBX,EAAM,GAAD,OAAIE,EAAII,KAAR,YAAgBJ,EAAIG,KAApB,YAA4BK,IADnD,uBACGE,EADH,EACGA,KADH,kBAEEA,EAAKC,SAFP,4C,sBAMA,SAAeC,EAAtB,kC,4CAAO,WAAgCJ,GAAhC,iBAAAC,EAAA,sEACkBX,EAAM,GAAD,OAAIE,EAAIK,OAAR,YAAkBL,EAAIG,MAAQ,CACxDU,OAAQ,CACNC,SAAU,QACVC,MAAOP,EACPQ,eAAe,KALd,uBACGN,EADH,EACGA,KADH,kBASEA,EAAKC,SATP,4C,sBAaA,SAAeM,EAAtB,oC,4CAAO,WAA+BT,EAASU,GAAxC,iBAAAT,EAAA,sEACkBX,EAAM,GAAD,OAAIE,EAAIG,KAAR,YAAgBe,GAAhB,OAAqBV,GAAW,CAC1DK,OAAQ,CACNC,SAAU,WAHT,uBACGJ,EADH,EACGA,KADH,kBAOEA,GAPF,4C,sBAzBPZ,EAAMqB,SAASC,QAAUpB,EAAIC,KAC7BH,EAAMqB,SAASN,OAAS,CACtBQ,QAASrB,EAAIM,M,gCCZf,8DAEe,SAASgB,EAAT,GAA+C,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,SAC/C,OACE,wBAAQF,KAAMA,EAAMG,UAAWC,IAAEC,IAAKC,QAASL,EAA/C,SACGC,IAKPH,EAAOQ,aAAe,CACpBD,QAAS,kBAAM,MACfJ,SAAU,O,mBCZZM,EAAOC,QAAU,CAAC,IAAM,sB,+HCGT,SAASC,EAAT,GAA4C,IAAtBC,EAAqB,EAArBA,UAAWC,EAAU,EAAVA,OAC9C,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEA,OACE,uBACEC,SAAU,SAAAC,GACRA,EAAEC,iBACFP,EAAUG,IAHd,UAME,uBACEK,YAAW,OAAEP,QAAF,IAAEA,IAAU,sBACvBQ,SAAU,SAAAH,GAAC,OAAIF,EAASE,EAAEI,OAAOC,UAEnC,eAACvB,EAAA,EAAD,CAAQC,KAAK,SAAb,UACE,cAAC,IAAD,CAAUuB,MAAO,CAAEC,YAAa,EAAGC,cAAe,KADpD,e,mBCdS,SAASC,EAAT,GAAuC,IAAXd,EAAU,EAAVA,OACnCe,EAAWC,cACjB,EAA4Bf,mBAAS,IAArC,mBAAOgB,EAAP,KAAeC,EAAf,KAUA,OARAC,qBAAU,WACHnB,GAILvB,YAAiBuB,GAAQoB,MAAK,SAAA7C,GAAI,OAAI2C,EAAU3C,QAC/C,CAACyB,IAGF,6BACGiB,EAAOI,KAAI,SAAAC,GAAK,OACf,6BACE,cAAC,IAAD,CACEC,GAAE,UAAKD,EAAMvC,IACbyC,MAAO,CAAEC,KAAMV,EAAUW,MAAO,gBAFlC,SAIGJ,EAAMK,SALFL,EAAMvC,SCfR,SAAS6C,IACtB,MAAwCC,cAAxC,mBAAOC,EAAP,KAAqBC,EAArB,KACM/B,EAAS8B,EAAaE,IAAI,UAEhC,OACE,gCACE,cAAClC,EAAD,CACEC,UAAW,SAAAC,GAAM,OAAI+B,EAAgB,CAAE/B,YACvCA,OAAQA,IAEV,cAACc,EAAD,CAAkBd,OAAQA","file":"static/js/MoviesPage.76325610.chunk.js","sourcesContent":["const axios = require('axios');\n\nexport const URL = {\n  BASE: 'https://api.themoviedb.org/3',\n  IMG: 'https://image.tmdb.org/t/p/w342',\n  PATH: 'movie',\n  HOME: 'trending',\n  SEARCH: 'search',\n  KEY: 'd59d4b143292fc56b6769ba48f713e41',\n};\n\naxios.defaults.baseURL = URL.BASE;\naxios.defaults.params = {\n  api_key: URL.KEY,\n};\n\n// Запросы на списки популярных фильмов НА СЕГОДНЯ для создания коллекции на главной странице\nexport async function trendingApiService(request) {\n  const { data } = await axios(`${URL.HOME}/${URL.PATH}/${request}`);\n  return data.results;\n}\n\n// Запросы на списки фильмов ПО КЛЮЧЕВОМУ СЛОВУ для создания коллекции на на странице фильмов\nexport async function searchApiService(request) {\n  const { data } = await axios(`${URL.SEARCH}/${URL.PATH}`, {\n    params: {\n      language: 'en-US',\n      query: request,\n      include_adult: false,\n    },\n  });\n\n  return data.results;\n}\n\n// Запрос информации О ФИЛЬМЕ, ОБ АКТЁРСКОМ СОСТАВЕ и ОБЗОРОВ для страницы кинофильма\nexport async function movieApiService(request, id) {\n  const { data } = await axios(`${URL.PATH}/${id}${request}`, {\n    params: {\n      language: 'en-US',\n    },\n  });\n\n  return data;\n}\n","import PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\nexport default function Button({ type, forClick, children }) {\n  return (\n    <button type={type} className={s.btn} onClick={forClick}>\n      {children}\n    </button>\n  );\n}\n\nButton.defaultProps = {\n  onClick: () => null,\n  children: null,\n};\n\nButton.propTypes = {\n  type: PropTypes.oneOf(['button', 'submit', 'reset']).isRequired,\n  onClick: PropTypes.func,\n  children: PropTypes.node,\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__19gL7\"};","import { useState } from 'react';\nimport { ImSearch } from 'react-icons/im';\nimport Button from 'components/Button/Button';\n\nexport default function MoviesForm({ forSearch, search }) {\n  const [input, setInput] = useState('');\n\n  return (\n    <form\n      onSubmit={e => {\n        e.preventDefault();\n        forSearch(input);\n      }}\n    >\n      <input\n        placeholder={search ?? 'Look for a movie...'}\n        onChange={e => setInput(e.target.value)}\n      />\n      <Button type=\"submit\">\n        <ImSearch style={{ marginRight: 8, marginBottom: -1 }} />\n        Search\n      </Button>\n    </form>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { searchApiService } from 'services/api-service';\n\nexport default function MoviesSearchList({ search }) {\n  const location = useLocation();\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    if (!search) {\n      return;\n    }\n\n    searchApiService(search).then(data => setMovies(data));\n  }, [search]);\n\n  return (\n    <ul>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <Link\n            to={`${movie.id}`}\n            state={{ from: location, label: 'Go to Search' }}\n          >\n            {movie.title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import { useSearchParams } from 'react-router-dom';\nimport MoviesForm from 'components/MoviesForm/MoviesForm';\nimport MoviesSearchList from 'components/MoviesSearchList/MoviesSearchList';\n\nexport default function MoviesPage() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const search = searchParams.get('search');\n\n  return (\n    <div>\n      <MoviesForm\n        forSearch={search => setSearchParams({ search })}\n        search={search}\n      />\n      <MoviesSearchList search={search} />\n    </div>\n  );\n}\n"],"sourceRoot":""}