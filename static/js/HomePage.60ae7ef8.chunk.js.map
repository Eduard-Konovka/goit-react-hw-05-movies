{"version":3,"sources":["services/api-service.js","services/settings-url.js","components/PageHeading/PageHeading.module.css","components/PageHeading/PageHeading.jsx","pages/HomePage/HomePage.jsx"],"names":["axios","require","apiService","url","PATH_HOME","PATH_SEARCH","params","api_key","URL","KEY","page","params_search","language","query","include_adult","fetchArticles","request","BASE","URLSearchParams","toString","get","data","results","incrementPage","this","resetPage","newPage","searchQuery","newQuery","movieApiService","PATH","id","W342_IMG_URL","W500_IMG_URL","W780_IMG_URL","TRAILER","module","exports","PageHeading","text","className","s","title","HomePage","useState","movies","setMovies","useEffect","then","map","movie","to"],"mappings":"kPACMA,EAAQC,EAAQ,IAGTC,EAAa,CACxBC,IAAK,GACLC,UAAW,iBACXC,YAAa,eACbC,OAAQ,CACNC,QAAQ,GAAD,OAAKC,IAAIC,KAChBC,KAAM,GAERC,cAAe,CACbC,SAAU,QACVC,MAAO,GACPC,eAAe,GAGXC,cAdkB,SAcJC,GAAU,IAAD,iIAEzB,EAAKb,IADS,WAAZa,EACF,UAAcR,IAAIS,KAAlB,YAA0B,EAAKZ,YAA/B,YAA8C,IAAIa,gBAChD,EAAKZ,QACLa,WAFF,YAEgB,IAAID,gBAAgB,EAAKP,eAAeQ,YAExD,UAAcX,IAAIS,KAAlB,YACE,EAAKb,UADP,YAEIY,EAFJ,YAEe,IAAIE,gBAAgB,EAAKZ,QAAQa,YARvB,SAWJnB,EAAMoB,IAAI,EAAKjB,KAXX,uBAWnBkB,EAXmB,EAWnBA,KAXmB,kBAYpBA,EAAKC,SAZe,8CAe7BC,cA7BwB,WA8BtBC,KAAKlB,OAAOI,MAAQ,GAGtBe,UAjCwB,WAkCtBD,KAAKlB,OAAOI,KAAO,GAGjBA,WACF,OAAOc,KAAKlB,OAAOI,MAGjBA,SAAKgB,GACPF,KAAKlB,OAAOI,KAAOgB,GAGjBC,kBACF,OAAOH,KAAKb,cAAcE,OAGxBc,gBAAYC,GACdJ,KAAKb,cAAcE,MAAQe,IAKlBC,EAAkB,CAC7BC,KAAK,QACLxB,OAAQ,CACNC,QAAQ,GAAD,OAAKC,IAAIC,KAChBG,SAAU,SAGNG,cAPuB,SAOTC,EAASe,GAAK,IAAD,mIACzB5B,EADyB,UAChBK,IAAIS,KADY,YACJ,EAAKa,KADD,YACSC,GADT,OACcf,EADd,YACyB,IAAIE,gBAC1D,EAAKZ,QACLa,YAH6B,SAKRnB,EAAMoB,IAAIjB,GALF,uBAKvBkB,EALuB,EAKvBA,KALuB,kBAMxBA,GANwB,gD,gCCzDpBb,IATH,CACVS,KAAM,+BACNR,IAAK,mCACLuB,aAAc,kCACdC,aAAc,kCACdC,aAAc,kCACdC,QAAS,mC,mBCLXC,EAAOC,QAAU,CAAC,MAAQ,6B,wICCX,SAASC,EAAT,GAAgC,IAATC,EAAQ,EAARA,KACpC,OAAO,oBAAIC,UAAWC,IAAEC,MAAjB,SAAyBH,ICEnB,SAASI,IACtB,MAA4BC,mBAAS,MAArC,mBAAOC,EAAP,KAAeC,EAAf,KAMA,OAJAC,qBAAU,WACR7C,IAAWa,cAAc,OAAOiC,KAAKF,KACpC,IAGD,qCACE,cAACR,EAAD,CAAaC,KAAK,mBAEjBM,GACC,6BACGA,EAAOI,KAAI,SAAAC,GAAK,OACf,6BACE,cAAC,IAAD,CAASC,GAAE,iBAAYD,EAAMnB,IAA7B,SAAoCmB,EAAMR,SADnCQ,EAAMnB","file":"static/js/HomePage.60ae7ef8.chunk.js","sourcesContent":["import URL from './settings-url';\nconst axios = require('axios');\n\n// Запросы на списки популярных фильмов НА СЕГОДНЯ или ПО КЛЮЧЕВОМУ СЛОВУ для создания коллекции на главной странице\nexport const apiService = {\n  url: '',\n  PATH_HOME: 'trending/movie',\n  PATH_SEARCH: 'search/movie',\n  params: {\n    api_key: `${URL.KEY}`,\n    page: 1,\n  },\n  params_search: {\n    language: 'en-US',\n    query: '',\n    include_adult: false,\n  },\n\n  async fetchArticles(request) {\n    if (request === 'search') {\n      this.url = `${URL.BASE}/${this.PATH_SEARCH}?${new URLSearchParams(\n        this.params,\n      ).toString()}&${new URLSearchParams(this.params_search).toString()}`;\n    } else {\n      this.url = `${URL.BASE}/${\n        this.PATH_HOME\n      }/${request}?${new URLSearchParams(this.params).toString()}`;\n    }\n\n    const { data } = await axios.get(this.url);\n    return data.results;\n  },\n\n  incrementPage() {\n    this.params.page += 1;\n  },\n\n  resetPage() {\n    this.params.page = 1;\n  },\n\n  get page() {\n    return this.params.page;\n  },\n\n  set page(newPage) {\n    this.params.page = newPage;\n  },\n\n  get searchQuery() {\n    return this.params_search.query;\n  },\n\n  set searchQuery(newQuery) {\n    this.params_search.query = newQuery;\n  },\n};\n\n// Запрос информации О ФИЛЬМЕ, ОБ АКТЁРСКОМ СОСТАВЕ и ОБЗОРОВ для страницы кинофильма\nexport const movieApiService = {\n  PATH: `movie`,\n  params: {\n    api_key: `${URL.KEY}`,\n    language: 'en-US',\n  },\n\n  async fetchArticles(request, id) {\n    const url = `${URL.BASE}/${this.PATH}/${id}${request}?${new URLSearchParams(\n      this.params,\n    ).toString()}`;\n\n    const { data } = await axios.get(url);\n    return data;\n  },\n};\n","const URL = {\n  BASE: 'https://api.themoviedb.org/3',\n  KEY: 'd59d4b143292fc56b6769ba48f713e41',\n  W342_IMG_URL: 'https://image.tmdb.org/t/p/w342',\n  W500_IMG_URL: 'https://image.tmdb.org/t/p/w500',\n  W780_IMG_URL: 'https://image.tmdb.org/t/p/w780',\n  TRAILER: 'https://www.youtube.com/embed/',\n};\n\nexport default URL;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"PageHeading_title__2tMCr\"};","import s from './PageHeading.module.css';\n\nexport default function PageHeading({ text }) {\n  return <h1 className={s.title}>{text}</h1>;\n}\n","import { useState, useEffect } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { apiService } from '../../services/api-service';\nimport PageHeading from '../../components/PageHeading/PageHeading';\n\nexport default function HomePage() {\n  const [movies, setMovies] = useState(null);\n\n  useEffect(() => {\n    apiService.fetchArticles('day').then(setMovies);\n  }, []);\n\n  return (\n    <>\n      <PageHeading text=\"Trending today\" />\n\n      {movies && (\n        <ul>\n          {movies.map(movie => (\n            <li key={movie.id}>\n              <NavLink to={`movies/${movie.id}`}>{movie.title}</NavLink>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n"],"sourceRoot":""}