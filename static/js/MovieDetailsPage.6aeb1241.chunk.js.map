{"version":3,"sources":["services/api-service.js","components/Button/Button.jsx","components/Button/Button.module.css","pages/MovieDetailsPage/MovieDetailsPage.module.css","pages/MovieDetailsPage/MovieDetailsPage.jsx"],"names":["axios","require","URL","BASE","IMG","PATH","HOME","SEARCH","KEY","trendingApiService","request","a","data","results","searchApiService","params","language","query","include_adult","movieApiService","id","defaults","baseURL","api_key","Button","type","forClick","children","className","s","btn","onClick","defaultProps","module","exports","Cast","lazy","Reviews","MovieDetailsPage","navigate","useNavigate","location","useLocation","movieId","useParams","useState","movie","setMovie","useEffect","then","state","from","pathname","search","style","marginRight","marginBottom","label","box","src","poster_path","alt","title","description","vote_average","overview","genres","map","genre","name","additional","to","fallback","timeout","path","element"],"mappings":"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","file":"static/js/MovieDetailsPage.6aeb1241.chunk.js","sourcesContent":["const axios = require('axios');\n\nexport const URL = {\n  BASE: 'https://api.themoviedb.org/3',\n  IMG: 'https://image.tmdb.org/t/p/w342',\n  PATH: 'movie',\n  HOME: 'trending',\n  SEARCH: 'search',\n  KEY: 'd59d4b143292fc56b6769ba48f713e41',\n};\n\naxios.defaults.baseURL = URL.BASE;\naxios.defaults.params = {\n  api_key: URL.KEY,\n};\n\n// Запросы на списки популярных фильмов НА СЕГОДНЯ для создания коллекции на главной странице\nexport async function trendingApiService(request) {\n  const { data } = await axios(`${URL.HOME}/${URL.PATH}/${request}`);\n  return data.results;\n}\n\n// Запросы на списки фильмов ПО КЛЮЧЕВОМУ СЛОВУ для создания коллекции на на странице фильмов\nexport async function searchApiService(request) {\n  const { data } = await axios(`${URL.SEARCH}/${URL.PATH}`, {\n    params: {\n      language: 'en-US',\n      query: request,\n      include_adult: false,\n    },\n  });\n\n  return data.results;\n}\n\n// Запрос информации О ФИЛЬМЕ, ОБ АКТЁРСКОМ СОСТАВЕ и ОБЗОРОВ для страницы кинофильма\nexport async function movieApiService(request, id) {\n  const { data } = await axios(`${URL.PATH}/${id}${request}`, {\n    params: {\n      language: 'en-US',\n    },\n  });\n\n  return data;\n}\n","import PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\nexport default function Button({ type, forClick, children }) {\n  return (\n    <button type={type} className={s.btn} onClick={forClick}>\n      {children}\n    </button>\n  );\n}\n\nButton.defaultProps = {\n  onClick: () => null,\n  children: null,\n};\n\nButton.propTypes = {\n  type: PropTypes.oneOf(['button', 'submit', 'reset']).isRequired,\n  onClick: PropTypes.func,\n  children: PropTypes.node,\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__19gL7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"MovieDetailsPage_box__11NVZ\",\"description\":\"MovieDetailsPage_description__15g4w\",\"additional\":\"MovieDetailsPage_additional__2L4rR\"};","import { useState, useEffect, lazy, Suspense } from 'react';\nimport {\n  Routes,\n  Route,\n  Link,\n  useParams,\n  useLocation,\n  useNavigate,\n} from 'react-router-dom';\nimport { ImArrowLeft } from 'react-icons/im';\nimport { movieApiService, URL } from 'services/api-service';\nimport Loading from 'components/Loading/Loading';\nimport Button from 'components/Button/Button';\nimport s from './MovieDetailsPage.module.css';\n\nconst Cast = lazy(() =>\n  import('components/Cast/Cast.jsx' /* webpackChunkName: \"Cast\" */),\n);\nconst Reviews = lazy(() =>\n  import('components/Reviews/Reviews.jsx' /* webpackChunkName: \"Reviews\" */),\n);\n\nexport default function MovieDetailsPage() {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    movieApiService(null, movieId).then(setMovie);\n  }, [movieId]);\n\n  const onGoBack = () => {\n    navigate(\n      location.state?.from?.pathname\n        ? `${location.state?.from?.pathname}${location.state?.from?.search}`\n        : '/',\n    );\n  };\n\n  return (\n    <>\n      {movie && (\n        <>\n          <Button type=\"button\" forClick={onGoBack}>\n            <ImArrowLeft style={{ marginRight: 8, marginBottom: -2 }} />\n            {location?.state?.label ?? 'Go Back'}\n          </Button>\n          <div className={s.box}>\n            <img src={`${URL.IMG}/${movie.poster_path}`} alt={movie.title} />\n\n            <div className={s.description}>\n              <h2>{movie.title}</h2>\n              <p>User Score: {movie.vote_average * 10}%</p>\n              <h3>Overview</h3>\n              <p>{movie.overview}</p>\n              <h4>Genres</h4>\n              <p>{movie.genres.map(genre => genre.name + ' ')}</p>\n            </div>\n          </div>\n\n          <div className={s.additional}>\n            <h5>Additional information</h5>\n            <ul>\n              <li>\n                <Link\n                  to={`/movies/${movieId}/cast`}\n                  state={{\n                    from: location.state.from,\n                    label: location.state.label,\n                  }}\n                >\n                  Cast\n                </Link>\n              </li>\n\n              <li>\n                <Link\n                  to={`/movies/${movieId}/reviews`}\n                  state={{\n                    from: location.state.from,\n                    label: location.state.label,\n                  }}\n                >\n                  Reviews\n                </Link>\n              </li>\n            </ul>\n          </div>\n\n          <Suspense fallback={<Loading timeout={3000} />}>\n            <Routes>\n              <Route path=\"/cast\" element={<Cast />} />\n              <Route path=\"/reviews\" element={<Reviews />} />\n            </Routes>\n          </Suspense>\n        </>\n      )}\n    </>\n  );\n}\n"],"sourceRoot":""}