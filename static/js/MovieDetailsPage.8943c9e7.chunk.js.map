{"version":3,"sources":["services/api-service.js","services/settings-url.js","components/Button/Button.jsx","components/Button/Button.module.css","pages/MovieDetailsPage/MovieDetailsPage.module.css","pages/MovieDetailsPage/MovieDetailsPage.jsx"],"names":["axios","require","apiService","url","PATH_HOME","PATH_SEARCH","params","api_key","URL","KEY","page","params_search","language","query","include_adult","fetchArticles","request","BASE","URLSearchParams","toString","get","data","results","incrementPage","this","resetPage","newPage","searchQuery","newQuery","movieApiService","PATH","id","W342_IMG_URL","W500_IMG_URL","W780_IMG_URL","TRAILER","Button","type","forClick","children","className","s","btn","onClick","defaultProps","module","exports","Cast","lazy","Reviews","MovieDetailsPage","navigate","useNavigate","location","useLocation","movieId","useParams","useState","movie","setMovie","useEffect","then","state","from","pathname","style","marginRight","marginBottom","label","box","src","poster_path","alt","title","description","vote_average","overview","genres","map","genre","name","additional","to","fallback","timeout","path","element"],"mappings":"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","file":"static/js/MovieDetailsPage.8943c9e7.chunk.js","sourcesContent":["import URL from './settings-url';\nconst axios = require('axios');\n\n// Запросы на списки популярных фильмов НА СЕГОДНЯ или ПО КЛЮЧЕВОМУ СЛОВУ для создания коллекции на главной странице\nexport const apiService = {\n  url: '',\n  PATH_HOME: 'trending/movie',\n  PATH_SEARCH: 'search/movie',\n  params: {\n    api_key: `${URL.KEY}`,\n    page: 1,\n  },\n  params_search: {\n    language: 'en-US',\n    query: '',\n    include_adult: false,\n  },\n\n  async fetchArticles(request) {\n    if (request === 'search') {\n      this.url = `${URL.BASE}/${this.PATH_SEARCH}?${new URLSearchParams(\n        this.params,\n      ).toString()}&${new URLSearchParams(this.params_search).toString()}`;\n    } else {\n      this.url = `${URL.BASE}/${\n        this.PATH_HOME\n      }/${request}?${new URLSearchParams(this.params).toString()}`;\n    }\n\n    const { data } = await axios.get(this.url);\n    return data.results;\n  },\n\n  incrementPage() {\n    this.params.page += 1;\n  },\n\n  resetPage() {\n    this.params.page = 1;\n  },\n\n  get page() {\n    return this.params.page;\n  },\n\n  set page(newPage) {\n    this.params.page = newPage;\n  },\n\n  get searchQuery() {\n    return this.params_search.query;\n  },\n\n  set searchQuery(newQuery) {\n    this.params_search.query = newQuery;\n  },\n};\n\n// Запрос информации О ФИЛЬМЕ, ОБ АКТЁРСКОМ СОСТАВЕ и ОБЗОРОВ для страницы кинофильма\nexport const movieApiService = {\n  PATH: `movie`,\n  params: {\n    api_key: `${URL.KEY}`,\n    language: 'en-US',\n  },\n\n  async fetchArticles(request, id) {\n    const url = `${URL.BASE}/${this.PATH}/${id}${request}?${new URLSearchParams(\n      this.params,\n    ).toString()}`;\n\n    const { data } = await axios.get(url);\n    return data;\n  },\n};\n","const URL = {\n  BASE: 'https://api.themoviedb.org/3',\n  KEY: 'd59d4b143292fc56b6769ba48f713e41',\n  W342_IMG_URL: 'https://image.tmdb.org/t/p/w342',\n  W500_IMG_URL: 'https://image.tmdb.org/t/p/w500',\n  W780_IMG_URL: 'https://image.tmdb.org/t/p/w780',\n  TRAILER: 'https://www.youtube.com/embed/',\n};\n\nexport default URL;\n","import PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\nexport default function Button({ type, forClick, children }) {\n  return (\n    <button type={type} className={s.btn} onClick={forClick}>\n      {children}\n    </button>\n  );\n}\n\nButton.defaultProps = {\n  onClick: () => null,\n  children: null,\n};\n\nButton.propTypes = {\n  type: PropTypes.oneOf(['button', 'submit', 'reset']).isRequired,\n  onClick: PropTypes.func,\n  children: PropTypes.node,\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__19gL7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"MovieDetailsPage_box__11NVZ\",\"description\":\"MovieDetailsPage_description__15g4w\",\"additional\":\"MovieDetailsPage_additional__2L4rR\"};","import { useState, useEffect, lazy, Suspense } from 'react';\nimport {\n  Routes,\n  Route,\n  Link,\n  useParams,\n  useLocation,\n  useNavigate,\n} from 'react-router-dom';\nimport { ImArrowLeft } from 'react-icons/im';\nimport { movieApiService } from '../../services/api-service';\nimport URL from '../../services/settings-url';\nimport Loading from '../../components/Loading/Loading';\nimport Button from 'components/Button/Button';\nimport s from './MovieDetailsPage.module.css';\n\nconst Cast = lazy(() =>\n  import('../../components/Cast/Cast.jsx' /* webpackChunkName: \"Cast\" */),\n);\nconst Reviews = lazy(() =>\n  import(\n    '../../components/Reviews/Reviews.jsx' /* webpackChunkName: \"Reviews\" */\n  ),\n);\n\nexport default function MovieDetailsPage() {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    movieApiService.fetchArticles(null, movieId).then(setMovie);\n  }, [movieId]);\n\n  const onGoBack = () => {\n    navigate(location?.state?.from?.pathname ?? '/');\n  };\n\n  return (\n    <>\n      {movie && (\n        <>\n          <Button type=\"button\" forClick={onGoBack}>\n            <ImArrowLeft style={{ marginRight: 8, marginBottom: -2 }} />\n            {location?.state?.from?.label ?? 'Go Back'}\n          </Button>\n          <div className={s.box}>\n            <img\n              src={`${URL.W342_IMG_URL}/${movie.poster_path}`}\n              alt={movie.title}\n            />\n\n            <div className={s.description}>\n              <h2>{movie.title}</h2>\n              <p>User Score: {movie.vote_average * 10}%</p>\n              <h3>Overview</h3>\n              <p>{movie.overview}</p>\n              <h4>Genres</h4>\n              <p>{movie.genres.map(genre => genre.name + ' ')}</p>\n            </div>\n          </div>\n\n          <div className={s.additional}>\n            <h5>Additional information</h5>\n            <ul>\n              <li>\n                <Link to={`/movies/${movieId}/cast`}>Cast</Link>\n              </li>\n\n              <li>\n                <Link to={`/movies/${movieId}/reviews`}>Reviews</Link>\n              </li>\n            </ul>\n          </div>\n\n          <Suspense fallback={<Loading timeout={3000} />}>\n            <Routes>\n              <Route path=\"/cast\" element={movie && <Cast />} />\n              <Route path=\"/reviews\" element={movie && <Reviews />} />\n            </Routes>\n          </Suspense>\n        </>\n      )}\n    </>\n  );\n}\n"],"sourceRoot":""}